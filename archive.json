{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-04-08T01:42:35.771430+00:00",
  "repo": "SECtim/draft-wuertele-oauth-security-topics-update",
  "labels": [
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    },
    {
      "name": "editorial",
      "description": "Typos, formatting, and the like.",
      "color": "17E24A"
    },
    {
      "name": "Needs WG input",
      "description": "Issue needs input from OAuth WG",
      "color": "2D16D4"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "I_kwDOOKn4ys6utJzJ",
      "title": "Decide on a title",
      "url": "https://github.com/SECtim/draft-wuertele-oauth-security-topics-update/issues/1",
      "state": "OPEN",
      "author": "SECtim",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Needs WG input"
      ],
      "body": "So far, I've put \"OAuth 2.0 Security Best Current Practice\" as the title, but it might make sense to use a different title to at least indicate that this is an extension of an existing document of that name.",
      "createdAt": "2025-03-19T09:29:09Z",
      "updatedAt": "2025-04-05T05:36:43Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 2,
      "id": "I_kwDOOKn4ys6utShA",
      "title": "Description for Audience Injection Attacks",
      "url": "https://github.com/SECtim/draft-wuertele-oauth-security-topics-update/issues/2",
      "state": "CLOSED",
      "author": "SECtim",
      "authorAssociation": "OWNER",
      "assignees": [
        "SECtim",
        "PedramHD"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2025-03-19T09:39:58Z",
      "updatedAt": "2025-03-24T16:07:13Z",
      "closedAt": "2025-03-24T16:07:12Z",
      "comments": []
    },
    {
      "number": 3,
      "id": "I_kwDOOKn4ys6utTBW",
      "title": "Description for attacks from mix-up reloaded work",
      "url": "https://github.com/SECtim/draft-wuertele-oauth-security-topics-update/issues/3",
      "state": "OPEN",
      "author": "SECtim",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Exact title and structure to be discussed.",
      "createdAt": "2025-03-19T09:40:32Z",
      "updatedAt": "2025-03-19T09:40:32Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 4,
      "id": "I_kwDOOKn4ys6vXR8L",
      "title": "What RFCs should this document update?",
      "url": "https://github.com/SECtim/draft-wuertele-oauth-security-topics-update/issues/4",
      "state": "OPEN",
      "author": "SECtim",
      "authorAssociation": "OWNER",
      "assignees": [
        "SECtim"
      ],
      "labels": [
        "Needs WG input"
      ],
      "body": "\"Update\" in the RFC \"updates\" list sense.\n\nWe certainly have 6749, 9700, and 6750 (due to the \"Mix-Up Reloaded\" issuer sharing cases, where a client ends up sending a bearer token to the wrong RS, thereby leaking it).\n\nProbably also 7521, 7522, and 7523 (or, at the very least, 7523).\n\nAnything else?",
      "createdAt": "2025-03-24T06:13:20Z",
      "updatedAt": "2025-04-05T05:36:24Z",
      "closedAt": null,
      "comments": [
        {
          "author": "SECtim",
          "authorAssociation": "OWNER",
          "body": "Probably also PAR",
          "createdAt": "2025-04-04T06:18:40Z",
          "updatedAt": "2025-04-04T06:18:40Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "I_kwDOOKn4ys6xHAmc",
      "title": "In 2.1, clarify why the token EP is used as aud",
      "url": "https://github.com/SECtim/draft-wuertele-oauth-security-topics-update/issues/8",
      "state": "OPEN",
      "author": "SECtim",
      "authorAssociation": "OWNER",
      "assignees": [
        "SECtim",
        "PedramHD"
      ],
      "labels": [],
      "body": "Based on feedback by @adon-at-work to help readers",
      "createdAt": "2025-04-04T06:32:42Z",
      "updatedAt": "2025-04-05T05:34:57Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 9,
      "id": "I_kwDOOKn4ys6xQcyD",
      "title": "Make the description of audience injection attacks more self-contained",
      "url": "https://github.com/SECtim/draft-wuertele-oauth-security-topics-update/issues/9",
      "state": "OPEN",
      "author": "SECtim",
      "authorAssociation": "OWNER",
      "assignees": [
        "SECtim",
        "PedramHD"
      ],
      "labels": [],
      "body": "(This is part of the feedback by @adon-at-work)\nAs a reader, it would be more readable if it's more self-contained, an engineer is unlikely to go read a full academic paper. (A number of places is referring to paper for details, which is for now a TODO deadlink, and that gave me a hard time. I\u2019m expecting the WG or those first time reader who aren't familiar with the work may have the same impression).",
      "createdAt": "2025-04-05T05:21:49Z",
      "updatedAt": "2025-04-05T05:21:49Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 10,
      "id": "I_kwDOOKn4ys6xQc7x",
      "title": "Clarify the description of the AS issuer identifier defense",
      "url": "https://github.com/SECtim/draft-wuertele-oauth-security-topics-update/issues/10",
      "state": "OPEN",
      "author": "SECtim",
      "authorAssociation": "OWNER",
      "assignees": [
        "SECtim",
        "PedramHD"
      ],
      "labels": [],
      "body": "(This is part of the feedback by @adon-at-work)\n- 2.1.2.1 Reminder about validating issuer field from metadata file, as per [rfc8414#section-3.3](https://datatracker.ietf.org/doc/html/rfc8414#section-3.3). Reminder for not to extract issuer from the token_endpoint string (engineer may be tempted to do so given their current implementation).\n- 2.1.2.1 \u201c\u201dNote that \"issuer identifier\" here does not refer to the term \"issuer\" as defined in {{Section 4.4 of RFC9700}}, but to the issuer identifier as used in {{!RFC8414}} and {{OpenID.Discovery}}.\u201d\u201d What\u2019s the difference?",
      "createdAt": "2025-04-05T05:23:23Z",
      "updatedAt": "2025-04-05T05:23:23Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 11,
      "id": "I_kwDOOKn4ys6xQdN-",
      "title": "Discuss \"single value audience\" requirements",
      "url": "https://github.com/SECtim/draft-wuertele-oauth-security-topics-update/issues/11",
      "state": "OPEN",
      "author": "SECtim",
      "authorAssociation": "OWNER",
      "assignees": [
        "SECtim",
        "PedramHD"
      ],
      "labels": [],
      "body": "(This is part of the feedback by @adon-at-work)\n2.1.2.2 aud=single target endpoint\n- single audience requirement. multiple audiences I think isn't necessarily a bad thing, as long as they are all belonging to the same issuer. ex. [[h-as.com/token](http://h-as.com/token), [h-as.com/revoke](http://h-as.com/revoke)]\n- What's the expectation if I need a cla for token negotiation and then later for revocation. I kinda think it could be a transactional process, I got a token, finish my task, and do clean up. I think it makes sense to reuse the same cla for both. But if its single aud, then i gotta create cla twice, one per endpoint. This can discourage people to cleanup/call revoke given the performance penalty (jti was introduced there for performance/replay reason).\n- let's say we want to allow multiple aud from the same issuer. or more generally, as is today, when people put multiple aud, what's one-time use of `jti`mean? is that one-time use per aud, or across all audiences. should we clarify?",
      "createdAt": "2025-04-05T05:26:13Z",
      "updatedAt": "2025-04-07T22:34:23Z",
      "closedAt": null,
      "comments": [
        {
          "author": "SECtim",
          "authorAssociation": "OWNER",
          "body": "> multiple audiences I think isn't necessarily a bad thing, as long as they are all belonging to the same issuer\n\nThat would require normative changes to the AS; i.e., the AS then MUST verify that it can identify with _all_ elements in the `aud` array before accepting a client assertion (or, maybe better: all elements must be endpoints of the AS). Not necessarily a reason to not include this proposal, but something to be aware of.\n\n> But if its single aud, then i gotta create cla twice, one per endpoint.\n\nOnly when using the \"exact endpoint\" audience defense, i.e., when no issuer identifier is available.\n\n> This can discourage people to cleanup/call revoke given the performance penalty (jti was introduced there for performance/replay reason).\n\nI wouldn't say that `jti` was introduced to enable replay - actually, quite the opposite: To (at least optionally) prevent replay. For example, the default for [OpenID Connect authentication JWTs](https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication) is \"These tokens MUST only be used once\". In the IETF world, the usual formulation is something like \"MAY use `jti` to ensure that JWTs are not replayed\", e.g., in [RFC7519](https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.7), [RFC7521](https://datatracker.ietf.org/doc/html/rfc7521#section-5.1), [RFC7522](https://datatracker.ietf.org/doc/html/rfc7522#section-3), [RFC7523](https://datatracker.ietf.org/doc/html/rfc7523#section-3), and [RFC9449](https://datatracker.ietf.org/doc/html/rfc9449#name-dpop-proof-jwt-syntax).\n\n> let's say we want to allow multiple aud from the same issuer. or more generally, as is today, when people put multiple aud, what's one-time use of jti mean? is that one-time use per aud, or across all audiences. should we clarify?\n\nThat's a can of worms this document certainly should not open, because it has nothing to do with audience injection attacks or their mitigation.\nThat said, in my opinion, the original formulations around `jti` and JWT replay/reuse are somewhat unfortunate, because they end up saying \"do whatever you want\" (with the exception of OIDC, but that also leaves the door open to \"unless conditions for reuse were negotiated between the parties\"), instead of giving clear options with their respective pros and cons.\n\n---\n\nSo, to summarize what I think:\n- This document should definitely avoid talking about `jti` and JWT replay/reuse.\n- I am in principle open to discuss the possibility of allowing `aud` arrays, but at least for RFCs 7521, 7522, 7523, and 9126, as well as the OIDF specs OIDC, CIBA, FAPI 1.0, and FAPI 2.0, corresponding updates/drafts thereof do require single-valued audiences; so talking about multi-valued `aud`s here might confuse people.",
          "createdAt": "2025-04-05T08:18:13Z",
          "updatedAt": "2025-04-05T08:18:13Z"
        },
        {
          "author": "adon-at-work",
          "authorAssociation": "CONTRIBUTOR",
          "body": ">  use jti to ensure that JWTs are not replayed\n\nSure. I should word it more carefully. I meant \"jti was introduced there for (trading off between) performance/replay reason\". Performance-critical applications may not want to use `jti`, where security-critical applications use `jti` to prevent replay.\n\nThere were (at least) two specs regarding `jti`\n- https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.7 says `jti` is optional, whereas\n- https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication says `jti` is required \n\nI missed the 2nd spec initially, and thought that most people aren't using `jti` since it's optional (given that replay is, to certain degree, mitigated by `exp` already). So I raised the concerns. \n\nSince `jti` is already a required thing in the context of using jwt as client authentication, then I assume people is likely re-generating a new cla fresh anyway whenever it hits an endpoint. So, I agree we should not bring up `jti`.",
          "createdAt": "2025-04-07T22:32:21Z",
          "updatedAt": "2025-04-07T22:34:22Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "I_kwDOOKn4ys6xQeXp",
      "title": "Clarify that proposed fixes do not require AS changes",
      "url": "https://github.com/SECtim/draft-wuertele-oauth-security-topics-update/issues/12",
      "state": "OPEN",
      "author": "SECtim",
      "authorAssociation": "OWNER",
      "assignees": [
        "SECtim",
        "PedramHD"
      ],
      "labels": [],
      "body": "@adon-at-work's initial feedback includes:\n\n> Draft does NOT mention the need for AS server change. But the openid letter clearly spells it out.\n> - Should AS change its enforcement first (ex. accepting token endpoint today but some clients are presenting aud=issuer)? Or should clients go first? It\u2019s practically impossible to coordinate so many parties to agree on a change, even more unlikely to happen at the same time. Then people will naturally ask for backward compatibility.\n> - Think about the owner of the malicious AS, he will likely have no incentive to update\u2026 but will come up with all kinds of excuses like I can\u2019t update because I have no engineering resources\u2026 Will client still need to send token_endpoint to those not updating yet?\n\n=> Draft should state and explain why the \"aud = issuer identifier\" and \"aud = exact endpoint\" defenses do not require any AS changes.",
      "createdAt": "2025-04-05T05:30:03Z",
      "updatedAt": "2025-04-05T06:16:13Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 13,
      "id": "I_kwDOOKn4ys6xQfO1",
      "title": "Discuss proposed alternative defense",
      "url": "https://github.com/SECtim/draft-wuertele-oauth-security-topics-update/issues/13",
      "state": "OPEN",
      "author": "SECtim",
      "authorAssociation": "OWNER",
      "assignees": [
        "SECtim",
        "PedramHD"
      ],
      "labels": [],
      "body": "(This is part of the feedback by @adon-at-work)\n\n> Easiest and most pragmatic solution that works overnight, that requires only client changes. Client ensures that there\u2019re no overlaps of client_id and token_endpoint pairs for all its ASes (be it existing ones or those by DCR in the future). Unlikely there\u2019s a legit use case where the pair would be the same across two different issuers. Should there be an existing collision, as a remedy, the app can re-register to get a new client_id over DCR from one of the issuers (the legit one is unlikely to reuse client_id) to make things unique.\n\nThink about whether this works and what the client has to watch out for. If viable as a defense, consider adding it.",
      "createdAt": "2025-04-05T05:33:18Z",
      "updatedAt": "2025-04-07T22:03:38Z",
      "closedAt": null,
      "comments": [
        {
          "author": "SECtim",
          "authorAssociation": "OWNER",
          "body": "Also consider ecosystems that always use the same client_id across ASs (e.g., OpenID Federation).",
          "createdAt": "2025-04-05T05:34:20Z",
          "updatedAt": "2025-04-05T05:34:20Z"
        },
        {
          "author": "SECtim",
          "authorAssociation": "OWNER",
          "body": "> requires only client changes\n\nThat is also true for the \"aud = issuer identifier\" and \"aud = exact endpoint\" defenses (see #12).\n\n> Client ensures that there\u2019re no overlaps of client_id and token_endpoint pairs for all its ASes\n\nI actually think that's not sufficient to prevent audience injection attacks, at least not in general. Consider a client that always includes the token and revocation endpoints in its client assertions (which is perfectly fine w.r.t. the relevant standards). In that case, the attacker AS can publish the following metadata (excerpt):\n```\ntoken_endpoint: att.com/token,\nrevocation_endpoint: hon.com/token\n```\nThe client's token request (to what the client thinks is the attacker AS) goes to `att.com/token` (i.e., to the attacker) and includes a client assertion with `aud: [\"att.com/token\", \"hon.com/token\"]`. That `aud` value is also valid for requests to `hon.com/token` (and maybe other endpoints of `hon.com` as well, see #8). Hence, this is an instance of an audience injection attack.\n\nWithout AS changes, most combinations of endpoints with client authentication can be (ab)used in one way or the other by an attacker to obtain a client assertion that's valid somewhere else _unless_ the client chooses an `aud` value that's either the issuer identifier or the exact target endpoint. Hence, I'd be very careful in trying to come up with some \"clever\" way for the client to ensure its AS registrations are \"not attackable\" (and, what's more: Any such requirement on the client would be in conflict with the current and widely implemented logic of \"client ID and AS endpoints are provided by the AS and (mostly) opaque values to the client\" with only very minimal restrictions, such as mandatory HTTPS for the token endpoint).\n\nAlso note that just doing another round of DCR - even if feasible, think of stuff like initial access tokens that are typically one-time use - is not at all guaranteed to result in a different client ID. In some cases, having the same client ID for all registrations of a given client (even across ASs) is mandatory, e.g., in OpenID Federation.\n\nI.e., I think this mechanism might introduce problems in practice and, more importantly, doesn't reliably work as a defense.",
          "createdAt": "2025-04-05T08:42:41Z",
          "updatedAt": "2025-04-05T08:42:41Z"
        },
        {
          "author": "adon-at-work",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I agree with everything you said. \n\nBut as I emphasized, the alternative defense is a **quick-and-dirty** fix (and surely it comes with all those \"cleverness\" concerns here and there as you tried to enumerate...). \n\nThe fundamental difference between our believes may be that I assume a change to `aud=token_EP` will introduce backward compatibility issues, since most (or at least some) ASes accept `aud=token_EP` **only**, as influenced and suggested by many of those specs. But apparently, you seem to expect *all* ASes to readily take any values that identify themselves (could be issuer, token_EP, par_EP, etc, and so no AS change is needed). \n\nIf the assumption is right, there will be compatibility issue. So in this imperfect world, what can a client do to secure itself while still keeping the lights on when these \"standard-non-compliant\" servers will only accept \"aud=token_EP\"?\n\n> Without AS changes, most combinations of endpoints with client authentication can be (ab)used in one way or the other by an attacker to obtain a client assertion that's valid somewhere else unless the client chooses an aud value that's either the issuer identifier or the exact target endpoint.\n\nAgree. Multiple values in aud is asking for trouble.\n\nI see here you're implicitly expecting client to use a **single** aud value for your solution to be secured too. If a client uses the same client_id across all ASes and include all issuers in its `aud=[issuer1, issuer2]`, then it can be screwed too. \n\nSimilarly, the alternative fix is meant for a vulnerable client that uses a **single** `aud = token_EP`. If we want to generalize, it could be said as \"there\u2019re no overlaps of client_id and token_endpoint (or whatever values client use in the aud) pairs for all its ASes\". But of course, this discussion is meaningful only if you're convinced about the backward compatibility issue.",
          "createdAt": "2025-04-07T21:22:43Z",
          "updatedAt": "2025-04-07T22:03:37Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 5,
      "id": "PR_kwDOOKn4ys6Pz3-x",
      "title": "Attack description for Audience Injection Attacks",
      "url": "https://github.com/SECtim/draft-wuertele-oauth-security-topics-update/pull/5",
      "state": "MERGED",
      "author": "SECtim",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Closes #2 ",
      "createdAt": "2025-03-24T06:17:11Z",
      "updatedAt": "2025-03-24T16:07:12Z",
      "baseRepository": "SECtim/draft-wuertele-oauth-security-topics-update",
      "baseRefName": "main",
      "baseRefOid": "d698f037727d3a6d92acbbe4f763cb865c0cc9ad",
      "headRepository": "SECtim/draft-wuertele-oauth-security-topics-update",
      "headRefName": "aud_inj_attack_description_ph",
      "headRefOid": "05d09878a63bfc68461eb929a3722de5f8f1cf68",
      "closedAt": "2025-03-24T16:07:11Z",
      "mergedAt": "2025-03-24T16:07:11Z",
      "mergedBy": "PedramHD",
      "mergeCommit": {
        "oid": "150a5567dde5ecd6a4430b73ff294f5c853964f9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOKn4ys6hkZs9",
          "commit": {
            "abbreviatedOid": "05d0987"
          },
          "author": "PedramHD",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-24T14:52:16Z",
          "updatedAt": "2025-03-24T14:52:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 6,
      "id": "PR_kwDOOKn4ys6P-9zB",
      "title": "Audience Injection Countermeasures",
      "url": "https://github.com/SECtim/draft-wuertele-oauth-security-topics-update/pull/6",
      "state": "MERGED",
      "author": "SECtim",
      "authorAssociation": "OWNER",
      "assignees": [
        "PedramHD"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2025-03-25T06:11:32Z",
      "updatedAt": "2025-03-25T10:11:26Z",
      "baseRepository": "SECtim/draft-wuertele-oauth-security-topics-update",
      "baseRefName": "main",
      "baseRefOid": "150a5567dde5ecd6a4430b73ff294f5c853964f9",
      "headRepository": "SECtim/draft-wuertele-oauth-security-topics-update",
      "headRefName": "aud_inj_countermeasures_tiw",
      "headRefOid": "7f84fdc3550ad850b9c042bcc6ef65f7f04cd741",
      "closedAt": "2025-03-25T10:11:26Z",
      "mergedAt": "2025-03-25T10:11:26Z",
      "mergedBy": "PedramHD",
      "mergeCommit": {
        "oid": "8b07a975b10da6081d50b0b040adb3013e83ed4a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOKn4ys6ht1-7",
          "commit": {
            "abbreviatedOid": "7f84fdc"
          },
          "author": "PedramHD",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-25T10:09:21Z",
          "updatedAt": "2025-03-25T10:09:21Z",
          "comments": []
        }
      ]
    },
    {
      "number": 7,
      "id": "PR_kwDOOKn4ys6QRyqR",
      "title": "minor touch up",
      "url": "https://github.com/SECtim/draft-wuertele-oauth-security-topics-update/pull/7",
      "state": "MERGED",
      "author": "adon-at-work",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I'm Adonis, one of the co-authors for the COAT and CORF work.\r\n\r\nThis audience injection attack is an interesting one. While reviewing what you guys have prepared for updating RFC9700, I spotted some non-controversial improvements as follows.\r\n\r\nI have other comments and questions regarding the attack and defense too, using my lens from both the academia and industry perspectives. I know Kaixuan is arranging a meeting between all of us, and we will discuss them. :)",
      "createdAt": "2025-03-26T22:17:10Z",
      "updatedAt": "2025-03-27T22:25:11Z",
      "baseRepository": "SECtim/draft-wuertele-oauth-security-topics-update",
      "baseRefName": "main",
      "baseRefOid": "8b07a975b10da6081d50b0b040adb3013e83ed4a",
      "headRepository": "adon-at-work/draft-wuertele-oauth-security-topics-update",
      "headRefName": "patch-1",
      "headRefOid": "1008401e47de198e0f5b080c7e8fbdedfa6588ec",
      "closedAt": "2025-03-27T22:12:39Z",
      "mergedAt": "2025-03-27T22:12:38Z",
      "mergedBy": "SECtim",
      "mergeCommit": {
        "oid": "63c6bb01cc01bc7cb4002846328ae57a267b8920"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOKn4ys6iI6xa",
          "commit": {
            "abbreviatedOid": "982fa5c"
          },
          "author": "SECtim",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "Thanks for taking the time to read through the proposed text and for improving it!",
          "createdAt": "2025-03-27T08:15:49Z",
          "updatedAt": "2025-03-27T08:16:49Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Unfortunately, this cannot be `json`, because that leads to errors in the build pipeline (complaining that this is not valid JSON, which is true). We consciously decided not to omit the `...`  to clearly indicate that further metadata is needed.",
              "createdAt": "2025-03-27T08:15:49Z",
              "updatedAt": "2025-03-27T08:17:11Z"
            },
            {
              "originalPosition": 14,
              "body": "See above.",
              "createdAt": "2025-03-27T08:15:57Z",
              "updatedAt": "2025-03-27T08:16:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOKn4ys6iUBmL",
          "commit": {
            "abbreviatedOid": "101491b"
          },
          "author": "SECtim",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-27T19:13:01Z",
          "updatedAt": "2025-03-27T19:13:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOOKn4ys6iUPPA",
          "commit": {
            "abbreviatedOid": "101491b"
          },
          "author": "PedramHD",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-27T19:40:41Z",
          "updatedAt": "2025-03-27T19:40:41Z",
          "comments": []
        }
      ]
    },
    {
      "number": 14,
      "id": "PR_kwDOOKn4ys6RfYTK",
      "title": "Clarify that none of the current countermeasures require AS changes",
      "url": "https://github.com/SECtim/draft-wuertele-oauth-security-topics-update/pull/14",
      "state": "OPEN",
      "author": "SECtim",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Do we need to explicitly explain why an AS change (e.g., to only accept its issuer identifier) does not help at all in preventing the attacks?\r\n\r\nFixes #12",
      "createdAt": "2025-04-05T06:14:18Z",
      "updatedAt": "2025-04-07T20:01:18Z",
      "baseRepository": "SECtim/draft-wuertele-oauth-security-topics-update",
      "baseRefName": "main",
      "baseRefOid": "f9ff75120236075925338e7a366b168b5d4f13cf",
      "headRepository": "SECtim/draft-wuertele-oauth-security-topics-update",
      "headRefName": "fix_12",
      "headRefOid": "9f0f4ddf7bd7f3659b965bc47fa2ceb670cd9ffd",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOKn4ys6jyseW",
          "commit": {
            "abbreviatedOid": "9f0f4dd"
          },
          "author": "adon-at-work",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-07T20:00:55Z",
          "updatedAt": "2025-04-07T20:01:18Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Based on Section 4.1.3 of RFC7519, the very generic clause of how `aud` can be used, it sounds like you're saying the authorization servers are expected to **readily** accept `aud={issuer}`, `aud={token_endpoint}`, `aud={revoke_endpoint}`, `aud={par_endpoint}` etc that identify themselves. Is this realistic though, when most other specs were suggesting clients to send `aud={token_endpoint}`?\r\n\r\nMy two cents. Think about I'm building a client that wants to support 3 servers. It's always better to define a clear (and standardized) contract between clients and servers. A client then needs to not to maintain a map like serverA can only take `token_endpoint`, while server B&C accept only `issuer` (nowhere this is communicated through openid/oauth metadata??).",
              "createdAt": "2025-04-07T20:00:55Z",
              "updatedAt": "2025-04-07T20:14:31Z"
            }
          ]
        }
      ]
    },
    {
      "number": 15,
      "id": "PR_kwDOOKn4ys6RffU5",
      "title": "Require clients to validate the issuer identifier",
      "url": "https://github.com/SECtim/draft-wuertele-oauth-security-topics-update/pull/15",
      "state": "OPEN",
      "author": "SECtim",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Also, better describe the difference to the \"issuer\" in RFC 9700.\r\n\r\nFixes #10",
      "createdAt": "2025-04-05T06:37:29Z",
      "updatedAt": "2025-04-07T20:06:29Z",
      "baseRepository": "SECtim/draft-wuertele-oauth-security-topics-update",
      "baseRefName": "main",
      "baseRefOid": "f9ff75120236075925338e7a366b168b5d4f13cf",
      "headRepository": "SECtim/draft-wuertele-oauth-security-topics-update",
      "headRefName": "fix_10",
      "headRefOid": "ca7cef755d0329c4cf114b31f83cbf0c6501d38d",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOKn4ys6jywD7",
          "commit": {
            "abbreviatedOid": "ca7cef7"
          },
          "author": "adon-at-work",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-07T20:06:28Z",
          "updatedAt": "2025-04-07T20:06:29Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Clients ~they~ MUST retrieve",
              "createdAt": "2025-04-07T20:06:29Z",
              "updatedAt": "2025-04-07T20:06:29Z"
            }
          ]
        }
      ]
    },
    {
      "number": 16,
      "id": "PR_kwDOOKn4ys6Rfiei",
      "title": "Explain why clients regularly use the token EP as audience",
      "url": "https://github.com/SECtim/draft-wuertele-oauth-security-topics-update/pull/16",
      "state": "OPEN",
      "author": "SECtim",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Fixes #8",
      "createdAt": "2025-04-05T07:04:09Z",
      "updatedAt": "2025-04-07T20:04:52Z",
      "baseRepository": "SECtim/draft-wuertele-oauth-security-topics-update",
      "baseRefName": "main",
      "baseRefOid": "f9ff75120236075925338e7a366b168b5d4f13cf",
      "headRepository": "SECtim/draft-wuertele-oauth-security-topics-update",
      "headRefName": "fix_8",
      "headRefOid": "4e2708494311ef9b35031d9b01359938d24b61bc",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "adon-at-work",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks",
          "createdAt": "2025-04-07T20:04:51Z",
          "updatedAt": "2025-04-07T20:04:51Z"
        }
      ],
      "reviews": []
    }
  ]
}